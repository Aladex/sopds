# Simple OPDS Catalog config file
#
[global]
db_name    = sopds
db_user    = sopds
db_pass    = sopds
db_host	   = localhost
db_charset = utf8

#Здесь необходимо укзать путь к каталогу в котором расположена ваша коллектция книг
root_lib   = /mnt/SATA1TB-2/КНИГИ/BOOKS
#root_lib   = /mnt/SATA1TB-2/КНИГИ/TEST

#Списк форматов, которые будут включаться в каталог
formats    = .pdf .djvu .fb2 .txt

#Некоторым OPDS-клиентам требуется полный путь в HTTP-запросе
#таким образом cgi_path и cover_path - задают такие пути
#если закомментировать эти параметры, то будет применены параметры по умолчанию:
#cgi_path=sopds.cgi и cover_path=../covers
cgi_path=/opds/py/sopds.cgi
cover_path=/opds/covers

# Количество выдаваемых строк на одну страницу
maxitems   = 60

# dublicates_find = yes, приводит к поиску дубликатов на основании полей title, format и filesize
# при этом дубликат помещается в базу, но помечается как дубликат и может исключаться из выдачи
# при поиске по наименованиям и по авторам. В случае поиска по каталогам, книги, помеченные как дубликаты все равно будут показываться
dublicates_find = yes

# Указывает следует ли показывать книги, помеченные при сканировании как дубликаты в сортировках по наименованию и автору
dublicates_show = no

# Извлекать метаинформацию из книг fb2
fb2parse   = yes

# Если cover_extract = yes, то при сканировании книг fb2 из них извлекается изображение обложки
# файлы с изображениями обложек помещаются в каталог covers 
# При просмотре каталога OPDS-клиентом извлеченная обложка будет показываться
# если cover _show = 1 или 3
# Установка этой опции в yes значительно замедляет сканирование каталога (НА ПОРЯДОК!!!) 
# Правда зарание извлеченные обложки в OPDS-клиенте будут загружаться практически мгновенно
cover_extract = no

# cover_show - способ показа обложек:
# 0 - не показывать, 
# 1 - показывать заранее извлеченные обложки, 
# 2 - извлекать обложки на лету и показывать 
# 3 - показать ранее извлеченную обложку, если обложка не извлекалась, то извелечь на лету и показать
# 
cover_show = 2 

# Предположительно столько байт от начала файла fb2 необходимо считать, чтобы получить необходимую метаинформацию (только description), если 0 то парсится весь файл
# при использование числа отличного от 0 возможны ошибки (например description очень длинный и занимает более, чем указанное число байт)
# при установленном cover_enable=yes значение fb2size вне зависимости от установки считается равным 0
# Экспериментальная штука, лучше оставить равным 0
fb2hsize   = 0 

# zipscan = yes  - Приводит к сканированию файлов архива
zipscan    = yes

# ziprescan = no - Предотвращает повторное сканирование всего zip-архива
# Но в этом случае, если в архиве произойдут изменения (удаления, добавления), то сканер этого не "заметит"
ziprescan  = no

# Указываем какая кодировка для названий файлов используется в ZIP-архивах
# доступные кодировки: cp437, cp866, cp1251, utf-8
# по умолчанию применяется кодировка cp437
# Поскольку в самом ZIP архиве сведения о кодировке, в которой находятся имена файлов - отсутствуют
# то автоматически определить правильную кодировку для имен файлов не представляется возможным
# поэтому для того чтобы кириллические имена файлов не ваыглядели как крякозябры следует применять кодировку cp866
# по умолчанию также используется значение zip_codepage = cp866
zip_codepage = cp866

# Установка delete_logical=yes приведет к тому, что при обнаружении сканером, что книга удалена, запись в БД об этой книге будет удалена логически (avail=0)
# Если delete_logical=no, то произойдет физическое удаление таких записей из базы данных
delete_logical=no

# При таком количестве авторов в выдаче по авторам следующий уровень сортировки предоставляться уже не будет 
splitauthors = 300 
# При таком количестве наименований книг в выдаче по наименованиям следующий уровень сортировки предоставляться уже не будет
splittitles = 300

# Путь к конвертеру из fb2 в epub 
# (При наличии нескольких конвертеров путь должен быть только один, два конвертера одновременно все равно работать не будут)
# Если закомментировать эту опцию, либо конвертер не будет найден по указанному пути
# то скачать книги в формате EPUB предлагаться не будет
# Опция temp_dir указывает в каком каталоге создавать временные файлы во время преобразования fb2toepub
#fb2toepub=../fb2toepub/unix_dist/fb2toepub
#fb2toepub=../fb2epub/fb2epub
#fb2toepub=../fb2conv/fb2epub
#fb2tomobi=../fb2conv/fb2mobi
#temp_dir=/tmp

# При установке опции single_commit = yes, данные записываемые сканером в БД коммитятся один раз при окончании сканирования
# Если single_commit = no то коммиты происходят кажды раз при добавлении книги в БД.
# Применение однократного коммита несколько ускоряет сканирование.
# По умолчанию будет считаться что single_commit=no
single_commit = yes

# Установка параметра title_as_filename = yes приведет к тому, что при скачивании книги имя файла будет изменено
# на транслитерацию заголовка (title) книги
# По умолчанию считается что title_as_filename = no
title_as_filename = yes

# alphabet_menu = yes в сортировака по авторам, по наименованиям и по жанрам приведет к появлению доп.меню выбора алфавита
# по умолчанию alphabet_menu=yes
alphabet_menu = yes

# new_period = N - количество суток в течении которых добавленные книги считаются новыми, по умолчанию 7 дней
# Если new_period=0, то меню новинок не будет выводится вовсе
# по умолчанию new_period = 7
new_period = 7 

# Установка параметра book_shelf = yes приведет к появлению в основном меню Книжной полки для пользователя (если настроена авторизация web-сервером)
# Здесь будут запоминаться скачанные пользователем книги. Это удобно при использовании нескольких устройств.
# При установке book_shelf = no Книжная полка в главном меню отображаться не будет, также не будет происходить запоминание загружаемых книг
book_shelf = yes

# Настройка логов
# Параметр logfile задает имя файла, куда будут складываться логи (путь задавать не нужно - логи будут находится в папке logs)
# По умолчанию logfile = sopds.log
# loglevel может быть одним из следующих значений: debug, info, warning, error, critical, none. 
# По умолчанию loglevel=info
logfile=sopds.log
loglevel=info

[daemon]
# pid_file должен содержать путь к pid-файлу процесса. Для демона sopdsd.py по указанному пути должен быть доступ на запись
# по умолчанию pid_file=/tmp/sopds.pid
pid_file = /tmp/sopds.pid

# scan_day_of_week содержит день недели (1=пн, 7=вс, 0=каждый день) когда должен запускаться процесс сканирования
# по умолчанию scan_day_of_week=0
scan_day_of_week = 0

# scan_time содержит время в формате HH:MM когда необходимо запустить сканирование
# по умолчанию scan_time=00:00
scan_time = 00:00

# scan_interval содержит интервал (в минутах) между сканированиями, например если scan_interval=120, а scan_time=00:00,
# то сканирование будет запускаться каждые 2 часа начиная с 00:00 (т.е. в 00:00, 02:00, 04:00, 06:00, и т.д.)
# если сканирование не будет завершено в течение указанного интервала, но новое сканирование запустится сразу после окончания предидущего
# Установка scan_interval=0 приводит к однократному выполнению сканирования в установленное опцией scan_time время
# по умолчанию scan_intervel = 0
scan_interval = 360

# scan_on_start определяет необходимость запуска сканирования при старте sopdsd.py
# если scan_on_start = yes , то при запуске sopdsd.py сразу же запустится сканирование
# по умолчанию scan_on_start = yes
scan_on_start = yes

[site]
id=http://sopds.ru/
title=SOPDS.RU | OPDS Catalog
icon=http://sopds.ru/favicon.ico
autor=Dmitry Shelepnev
url=http://sopds.ru
email=admin@sopds.ru
main_title=ROOT of Simple OPDS Catalog
